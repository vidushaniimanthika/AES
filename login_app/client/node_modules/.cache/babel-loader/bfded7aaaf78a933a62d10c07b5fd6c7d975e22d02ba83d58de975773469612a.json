{"ast":null,"code":"import toast from \"react-hot-toast\";\nimport Password from \"../components/Password\";\n\n/**validate login page username */\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n/**validate password */\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n/**validate password */\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  /* eslint-disable no-useless-escape */\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 8) {\n    errors.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character\");\n  }\n  return errors;\n}\n\n/**validate reset password */\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"Password Not match...!\");\n  }\n  return errors;\n}\n\n/**validate user name */\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.include(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}\n\n/**validate register form */\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  emailVerify(errors, values);\n  return errors;\n}\n\n/** validate email */\nfunction emailVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.email) {\n    error.email = toast.error(\"Email Required...!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n  return error;\n}\n\n/**profile validate */\nexport async function profileValidation(values) {\n  const errors = emailVerify({}, values);\n  return errors;\n}","map":{"version":3,"names":["toast","Password","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","arguments","length","undefined","specialChars","password","error","includes","test","resetPasswordValidation","confirm_pwd","exist","username","include","registerValidation","emailVerify","email","profileValidation"],"sources":["F:/AES-Group-Project/login_app/client/src/helper/validate.js"],"sourcesContent":["import toast from \"react-hot-toast\"\r\nimport Password from \"../components/Password\";\r\n\r\n/**validate login page username */\r\nexport async function usernameValidate(values){\r\n    const errors = usernameVerify({},values);\r\n\r\n    return errors;\r\n\r\n}\r\n/**validate password */\r\nexport async function passwordValidate(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\n/**validate password */\r\nfunction passwordVerify(errors = {}, values){\r\n    /* eslint-disable no-useless-escape */\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n    if(!values.password){\r\n        errors.password = toast.error(\"Password Required...!\");\r\n    } else if(values.password.includes(\" \")){\r\n        errors.password = toast.error(\"Wrong Password...!\");\r\n    }else if(values.password.length < 8){\r\n        errors.password = toast.error(\"Password must be more than 4 characters long\");\r\n    }else if(!specialChars.test(values.password)){\r\n        errors.password = toast.error(\"Password must have special character\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n/**validate reset password */\r\nexport async function resetPasswordValidation(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    if(values.password!==values.confirm_pwd){\r\n        errors.exist = toast.error(\"Password Not match...!\");\r\n    }\r\n    return errors;\r\n\r\n}\r\n\r\n\r\n\r\n/**validate user name */\r\nfunction usernameVerify(error = {}, values){\r\n    if(!values.username){\r\n        error.username = toast.error('Username Required...!')\r\n    }\r\n    else if(values.username.include(\" \")){\r\n        error.username=toast.error(\"Invalid Username...!\")\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\n/**validate register form */\r\nexport async function registerValidation(values){\r\n    const errors = usernameVerify({}, values);\r\n    emailVerify(errors,values)\r\n\r\n    return errors;\r\n\r\n}\r\n\r\n/** validate email */\r\nfunction emailVerify(error ={}, values){\r\n    if(!values.email){\r\n        error.email = toast.error(\"Email Required...!\");\r\n    }else if(values.email.includes(\" \")){\r\n        error.email = toast.error(\"Wrong Email...!\")\r\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\r\n        error.email = toast.error(\"Invalid email address...!\")\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\n/**profile validate */\r\nexport async function profileValidation(values){\r\n    const errors = emailVerify({},values);\r\n    return errors;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}